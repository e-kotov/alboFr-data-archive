name: Update Tiger Mosquito Data

on:
  schedule:
    - cron: '0 0 * * *'    # daily at midnight UTC
  workflow_dispatch:

jobs:
  update-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write     # needed for committing & releases

    steps:
      # 1) Checkout full history
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 2) Compute ISO date for naming
      - name: Compute ISO Date Version
        id: date
        run: |
          iso_date=$(date -I)
          echo "iso_date=$iso_date" >> $GITHUB_OUTPUT

      # 3) R environment setup
      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev

      - name: Set Up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: 'release'
          use-public-rspm: true

      - name: Install R packages
        run: |
          Rscript -e "install.packages('pak', repos='https://packagemanager.posit.co/cran/__linux__/noble/latest')"
          Rscript -e "options(repos='https://packagemanager.posit.co/cran/__linux__/noble/latest'); pak::pak(c('rlang','RcppSimdJson'))"

      - name: Install alboFr
        run: |
          Rscript -e 'pak::pak("e-kotov/alboFr")'

      # 4) Fetch the latest data
      - name: Fetch Data and Save as GeoJSON
        run: |
          Rscript -e "library(alboFr);
                      x <- get_tiger_mosquito_colonisation_in_france(output='geojson');
                      writeLines(x, 'tiger_mosquito_colonisation_in_france.geojson')"

      # 5) Commit “latest” geojson back to repo
      - name: Commit Updated GeoJSON File
        uses: EndBug/add-and-commit@v9
        with:
          message: "Update tiger mosquito colonisation geojson for ${{ steps.date.outputs.iso_date }} [skip ci]"
          add: "tiger_mosquito_colonisation_in_france.geojson"
          push: true

      # 6) Stage only the data in a fixed folder
      - name: Stage files for packaging
        run: |
          rm -rf tiger-mosquito-data
          mkdir tiger-mosquito-data
          cp tiger_mosquito_colonisation_in_france.geojson tiger-mosquito-data/

      # 7) Zip it, excluding .github/
      - name: Zip the data bundle
        run: |
          zip -r "${{ steps.date.outputs.iso_date }}-tiger-mosquito-data.zip" \
              tiger-mosquito-data \
              -x "tiger-mosquito-data/.github/*"

      # 8) Create the GitHub Release with that zip
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.date.outputs.iso_date }}
          name: "Release ${{ steps.date.outputs.iso_date }}"
          body: "Daily updated tiger mosquito colonisation in France data for ${{ steps.date.outputs.iso_date }}."
          draft: false
          prerelease: false
          artifacts: |
            ${{ steps.date.outputs.iso_date }}-tiger-mosquito-data.zip
