name: Update Tiger Mosquito Data

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC
  workflow_dispatch:

jobs:
  update-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Needed for committing & creating releases

    steps:
      # 1) Checkout repo using your PAT (or GITHUB_TOKEN if it has write permissions)
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 2) Compute the ISO date for naming
      - name: Compute ISO Date Version
        id: date
        run: |
          iso_date=$(date -I)
          echo "iso_date=$iso_date" >> $GITHUB_OUTPUT

      # 3) Install Dependencies (Example R steps)
      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev

      - name: Set Up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: 'release'
          use-public-rspm: true

      - name: Install R dependencies
        run: |
          Rscript -e "install.packages('pak', repos='https://packagemanager.posit.co/cran/__linux__/noble/latest')"
          Rscript -e "options(repos='https://packagemanager.posit.co/cran/__linux__/noble/latest'); pak::pak(c('pak', 'sf', 'purrr', 'RcppSimdJson', 'ggplot2', 'quarto'))"
        
      - name: Install alboFr
        run: |
          Rscript -e 'pak::pak("e-kotov/alboFr")'

      # 4) Fetch data, save to a single "latest" file (no date in filename)
      - name: Fetch Data and Save as GeoJSON
        run: |
          Rscript -e "library(alboFr); \
                      x <- get_tiger_mosquito_colonisation_in_france(); \
                      sf::st_write(x, 'tiger_mosquito_colonisation_in_france.geojson', quiet = TRUE)"

      # 5) Commit only the "latest" file
      - name: Commit Updated GeoJSON File
        uses: EndBug/add-and-commit@v9
        with:
          message: "Update tiger mosquito colonisation geojson for ${{ steps.date.outputs.iso_date }} [skip ci]"
          add: "tiger_mosquito_colonisation_in_france.geojson"
          push: true

      # 6) Rename that file to date-stamped version (do NOT commit)
      - name: Rename the GeoJSON File
        run: |
          mv tiger_mosquito_colonisation_in_france.geojson \
             ${{ steps.date.outputs.iso_date }}_tiger_mosquito_colonisation_in_france.geojson

      # 7) Gzip the renamed file
      - name: Gzip the Dated GeoJSON
        run: |
          gzip -f "${{ steps.date.outputs.iso_date }}_tiger_mosquito_colonisation_in_france.geojson"

      # 8) Create a Release with the gzipped artifact
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.date.outputs.iso_date }}
          name: "Release ${{ steps.date.outputs.iso_date }}"
          body: "Daily updated tiger mosquito colonisation data for ${{ steps.date.outputs.iso_date }}."
          draft: false
          prerelease: false
          artifacts: "${{ steps.date.outputs.iso_date }}_tiger_mosquito_colonisation_in_france.geojson.gz"
